// <auto-generated />
using System;
using Connect4.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Connect4.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250728230808_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Jugador", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorId"));

                    b.Property<int>("Empatadas")
                        .HasColumnType("int");

                    b.Property<int>("Ganadas")
                        .HasColumnType("int");

                    b.Property<int>("Marcador")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perdidas")
                        .HasColumnType("int");

                    b.HasKey("JugadorId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Movimiento", b =>
                {
                    b.Property<int>("MovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimientoId"));

                    b.Property<string>("Columna")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenTurno")
                        .HasColumnType("int");

                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.HasKey("MovimientoId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PartidaId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Partida", b =>
                {
                    b.Property<int>("PartidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidaId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Jugador1Id")
                        .HasColumnType("int");

                    b.Property<int>("Jugador2Id")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurnoJugadorId")
                        .HasColumnType("int");

                    b.HasKey("PartidaId");

                    b.HasIndex("Jugador1Id");

                    b.HasIndex("Jugador2Id");

                    b.HasIndex("TurnoJugadorId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("Movimiento", b =>
                {
                    b.HasOne("Jugador", "Jugador")
                        .WithMany("Movimientos")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Partida", "Partida")
                        .WithMany("Movimientos")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("Partida", b =>
                {
                    b.HasOne("Jugador", "Jugador1")
                        .WithMany("PartidasComoJugador1")
                        .HasForeignKey("Jugador1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Jugador", "Jugador2")
                        .WithMany("PartidasComoJugador2")
                        .HasForeignKey("Jugador2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Jugador", "TurnoJugador")
                        .WithMany()
                        .HasForeignKey("TurnoJugadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Jugador1");

                    b.Navigation("Jugador2");

                    b.Navigation("TurnoJugador");
                });

            modelBuilder.Entity("Jugador", b =>
                {
                    b.Navigation("Movimientos");

                    b.Navigation("PartidasComoJugador1");

                    b.Navigation("PartidasComoJugador2");
                });

            modelBuilder.Entity("Partida", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
